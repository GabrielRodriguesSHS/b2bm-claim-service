CREATE TABLE service_order_data_import_audit_information (
    service_order_data_import_audit_information_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    total_number_of_records INT NOT NULL,
    generated_by VARCHAR(255) NOT NULL,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    CONSTRAINT pk_service_order_data_import_audit_information PRIMARY KEY (service_order_data_import_audit_information_id)
);

CREATE TABLE service_order (
    service_order_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    unit_number VARCHAR(255) NOT NULL,
    service_order_number VARCHAR(255) NOT NULL,
    closed_date date,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    service_order_data_import_audit_information_id BIGINT,
    CONSTRAINT pk_service_order PRIMARY KEY (service_order_id)
);

ALTER TABLE service_order ADD CONSTRAINT FK_SERVICE_ORDER_ON_SERVICE_ORDER_DATA_IMPORT_AUDIT_INFORMATION FOREIGN KEY (service_order_data_import_audit_information_id) REFERENCES service_order_data_import_audit_information (service_order_data_import_audit_information_id);

CREATE TABLE service_attempt (
    service_attempt_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    call_date date,
    tech_employee_number VARCHAR(100),
    call_code VARCHAR(255),
    start_time TIMESTAMP WITHOUT TIME ZONE,
    end_time TIMESTAMP WITHOUT TIME ZONE,
    transit_time_in_minutes INT,
    tech_comment1 VARCHAR(255),
    tech_comment2 VARCHAR(255),
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    service_order_id BIGINT,
    CONSTRAINT pk_service_attempt PRIMARY KEY (service_attempt_id)
);


CREATE TABLE service_monetary (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type_payment VARCHAR(255),
    date_payment date,
    value1 DOUBLE PRECISION,
    service_order_data_id BIGINT,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    CONSTRAINT pk_service_monetary PRIMARY KEY (id)
);

CREATE TABLE job_codes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    sequence_number INT,
    job_code BIGINT,
    description VARCHAR(255),
    service_order_data_id BIGINT,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    CONSTRAINT pk_job_codes PRIMARY KEY (id)
);

CREATE TABLE udf_component (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    code BIGINT,
    char_component VARCHAR(255),
    service_order_data_id BIGINT,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    CONSTRAINT pk_udf_component PRIMARY KEY (id)
);

CREATE TABLE parts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    sequence_number INT,
    part_code VARCHAR(255),
    part_description VARCHAR(255),
    service_order_data_id BIGINT,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    CONSTRAINT pk_parts PRIMARY KEY (id)
);

-- Add foreign key constraints
ALTER TABLE service_attempt ADD CONSTRAINT FK_SERVICE_ATTEMPT_ON_SERVICE_ORDER FOREIGN KEY (service_order_id) REFERENCES service_order (service_order_id);
ALTER TABLE service_monetary ADD CONSTRAINT FK_SERVICE_MONETARY_ON_SERVICE_ORDER FOREIGN KEY (service_order_data_id) REFERENCES service_order (service_order_id);
ALTER TABLE job_codes ADD CONSTRAINT FK_JOB_CODES_ON_SERVICE_ORDER FOREIGN KEY (service_order_data_id) REFERENCES service_order (service_order_id);
ALTER TABLE udf_component ADD CONSTRAINT FK_UDF_COMPONENT_ON_SERVICE_ORDER FOREIGN KEY (service_order_data_id) REFERENCES service_order (service_order_id);
ALTER TABLE parts ADD CONSTRAINT FK_PARTS_ON_SERVICE_ORDER FOREIGN KEY (service_order_data_id) REFERENCES service_order (service_order_id);

-- Add indexes for foreign keys for query optimization
CREATE INDEX idx_service_order_service_order_data_import_audit_information_id ON service_order (service_order_data_import_audit_information_id);
CREATE INDEX idx_service_attempt_service_order_id ON service_attempt (service_order_id);
CREATE INDEX idx_service_monetary_service_order_data_id ON service_monetary (service_order_data_id);
CREATE INDEX idx_job_codes_service_order_data_id ON job_codes (service_order_data_id);
CREATE INDEX idx_udf_component_service_order_data_id ON udf_component (service_order_data_id);
CREATE INDEX idx_parts_service_order_data_id ON parts (service_order_data_id);