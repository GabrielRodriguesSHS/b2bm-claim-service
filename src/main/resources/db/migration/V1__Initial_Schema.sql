CREATE TABLE service_order_data_import_audit_information (
    service_order_data_import_audit_information_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    total_number_of_records INT NOT NULL,
    generated_by VARCHAR(255) NOT NULL,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    CONSTRAINT pk_service_order_data_import_audit_information PRIMARY KEY (service_order_data_import_audit_information_id)
);

CREATE TABLE service_order (
    service_order_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    unit_number VARCHAR(255) NOT NULL,
    order_number VARCHAR(255) NOT NULL,
    closed_date VARCHAR(40),
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    service_order_data_import_audit_information_id BIGINT,
    CONSTRAINT pk_service_order PRIMARY KEY (service_order_id)
);

ALTER TABLE service_order ADD CONSTRAINT FK_SERVICE_ORDER_ON_SERVICE_ORDER_DATA_IMPORT_AUDIT_INFORMATION FOREIGN KEY (service_order_data_import_audit_information_id) REFERENCES service_order_data_import_audit_information (service_order_data_import_audit_information_id);

CREATE TABLE service_attempt (
    service_attempt_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    call_date VARCHAR(40),
    technician_employee_number VARCHAR(100),
    call_code VARCHAR(255),
    start_time VARCHAR(40),
    end_time VARCHAR(40),
    transit_time_in_minutes VARCHAR(40),
    technician_comment1 VARCHAR(255),
    technician_comment2 VARCHAR(255),
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    service_order_id BIGINT,
    CONSTRAINT pk_service_attempt PRIMARY KEY (service_attempt_id)
);

-- Add foreign key constraints
ALTER TABLE service_attempt ADD CONSTRAINT FK_SERVICE_ATTEMPT_ON_SERVICE_ORDER FOREIGN KEY (service_order_id) REFERENCES service_order (service_order_id);

CREATE TABLE validation_config  (
    rule_validation_config_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    rule_name Varchar(50),
    obligor_id BIGINT,
    rule_details JSON,
    error_message VARCHAR(50),
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    last_modified_by VARCHAR(255) NOT NULL,
    CONSTRAINT pk_rule_validation_config PRIMARY KEY (rule_validation_config_id)
);

INSERT INTO validation_config(rule_name, obligor_id, rule_details, error_message, created_date, last_modified_date, created_by, last_modified_by)
VALUES
('SERIAL_NUMBER_VALIDATION', 1, '{"required" : "true", "errorMessageRequired": "Serial missing", "minLength" : 0, "maxLength": 10, "errorMessageLength": "Serial does not meet length requirements"}', 'Serial Number does not meet the required parameters', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('SERIAL_NUMBER_VALIDATION', 2, '{"required" : "true", "errorMessageRequired": "Serial missing", "minLength" : 5, "maxLength": 15, "errorMessageLength": "Serial does not meet length requirements"}', 'Serial Number does not meet the required parameters', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('SERIAL_NUMBER_VALIDATION', 3, '{"required" : "false", "errorMessageRequired": "Serial missing", "minLength" : 0, "maxLength": 50, "errorMessageLength": "Serial does not meet length requirements"}', 'Serial Number does not meet the required parameters', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('APPROVED_BRAND', 1, '{"listApprovedBrand" : ["LG", "Samsung"]}', 'Unrecognized brand for obligor', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('APPROVED_BRAND', 2, '{"listApprovedBrand" : ["LG", "Samsung"]}', 'Unrecognized brand for obligor', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('APPROVED_BRAND', 3, '{"listApprovedBrand" : ["LG", "Samsung"]}', 'Unrecognized brand for obligor', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('APPROVED_MODEL_NUMBER', 1, '{"listApprovedModelNumber" : ["MODEL123", "ModelTest"]}', 'Invalid model number for selected obligor', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('APPROVED_MODEL_NUMBER', 2, '{"listApprovedModelNumber" : ["MODEL123", "ModelTest"]}', 'Invalid model number for selected obligor', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('APPROVED_MODEL_NUMBER', 3, '{"listApprovedModelNumber" : ["MODEL123", "ModelTest"]}', 'Invalid model number for selected obligor', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('PARTS_VALIDATION', null, '{"required" : "true", "maxPartsPerClaim" : 1}', 'Multiple parts detected', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('MANUAL_REVIEW_PROC_ID', 1, '{"listManualReviewProcId" : [1, 2]}', 'PROC ID is under review protocol', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('MANUAL_REVIEW_PROC_ID', 2, '{"listManualReviewProcId" : [1, 2]}', 'PROC ID is under review protocol', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service'),
('MANUAL_REVIEW_PROC_ID', 3, '{"listManualReviewProcId" : [1, 2]}', 'PROC ID is under review protocol', '2025-05-29', '2025-05-29', 'b2bm-claim-service', 'b2bm-claim-service');

-- Add indexes for foreign keys for query optimization
CREATE INDEX idx_service_order_service_order_data_import_audit_information_id ON service_order (service_order_data_import_audit_information_id);
CREATE INDEX idx_service_attempt_service_order_id ON service_attempt (service_order_id);
CREATE INDEX idx_rule_validation_config_id ON rule_validation_config (rule_validation_config_id);